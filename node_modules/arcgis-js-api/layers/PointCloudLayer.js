// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.8/esri/copyright.txt for details.

define(["require","exports","../core/tsSupport/assignHelper","../core/tsSupport/declareExtendsHelper","../core/tsSupport/decorateHelper","../request","../core/Error","../core/lang","../core/Logger","../core/promiseUtils","../core/urlUtils","../core/accessorSupport/decorators","./Layer","./mixins/SceneService","./pointCloudFilters/jsonUtils","./pointCloudFilters/typeUtils","./support/Field","../renderers/support/pointCloud/jsonUtils","../renderers/support/pointCloud/typeUtils","../symbols/support/ElevationInfo"],function(e,r,t,o,i,n,s,a,p,l,d,y,u,c,f,v,g,h,w,S){function I(e,r,t){return e&&((e=h.read(e,r,t)||void 0)||m.error("Failed to create renderer",{rendererDefinition:e,layer:this,context:t})),e}var m=p.getLogger("esri.layers.PointCloudLayer");return function(r){function p(e,t){var o=r.call(this)||this;return o.operationalLayerType="PointCloudLayer",o.opacity=1,o.fields=null,o.elevationInfo=null,o.legendEnabled=!0,o.renderer=null,o.type="point-cloud",o}return o(p,r),p.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?t({url:e},r):e},p.prototype.readServiceFields=function(e,r,t){return Array.isArray(e)?e.map(function(e){var r=new g;return"FieldTypeInteger"===e.type&&(e=a.clone(e),e.type="esriFieldTypeInteger"),r.read(e,t),r}):Array.isArray(r.attributeStorageInfo)?r.attributeStorageInfo.map(function(e){return new g({name:e.name,type:"ELEVATION"===e.name?"double":"integer"})}):null},p.prototype.load=function(){var e=this,r=this.loadFromPortal({supportedTypes:["Scene Service"]}).always(function(){return e._fetchService()});return this.addResolvingPromise(r),this.when()},p.prototype.importLayerViewModule=function(r){switch(r.type){case"2d":return l.reject(new s("point-cloud-layer:view-not-supported","PointCloudLayer is only supported in 3D"));case"3d":return l.create(function(r){return e(["../views/3d/layers/PointCloudLayerView3D"],r)})}},p.prototype._validateLayer=function(e){if(e.layerType&&"PointCloud"!==e.layerType)throw new s("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new s("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(this.version.major>2)throw new s("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"})},p.prototype.hasCachedStatistics=function(e){return null!=this.attributeStorageInfo&&this.attributeStorageInfo.some(function(r){return r.name===e})},p.prototype.queryCachedStatistics=function(e){if(!this.hasCachedStatistics(e))return l.reject(new s("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available"));for(var r=0,t=this.attributeStorageInfo;r<t.length;r++){var o=t[r];if(o.name===e){var i=d.join(this.parsedUrl.path,"./statistics/"+o.key);return n(i,{query:{f:"json"},responseType:"json"}).then(function(e){return e.data})}}},i([y.property({readOnly:!0})],p.prototype,"operationalLayerType",void 0),i([y.property({readOnly:!0,json:{write:!1,read:!1}})],p.prototype,"opacity",void 0),i([y.property({types:[v.types],json:{origins:{service:{read:{source:"filters",reader:f.read}}},read:{source:"layerDefinition.filters",reader:f.read},write:{target:"layerDefinition.filters",writer:f.write}}})],p.prototype,"filters",void 0),i([y.property({type:[g]})],p.prototype,"fields",void 0),i([y.reader("service","fields",["fields","attributeStorageInfo"])],p.prototype,"readServiceFields",null),i([y.property({readOnly:!0})],p.prototype,"attributeStorageInfo",void 0),i([y.property({type:S,json:{origins:{service:{read:{source:"elevationInfo"}}},read:{source:"layerDefinition.elevationInfo"},write:{target:"layerDefinition.elevationInfo"}}})],p.prototype,"elevationInfo",void 0),i([y.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],p.prototype,"legendEnabled",void 0),i([y.property({types:w.types,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:I}}},read:{source:"layerDefinition.drawingInfo.renderer",reader:I},write:{target:"layerDefinition.drawingInfo.renderer"}}})],p.prototype,"renderer",void 0),i([y.property({json:{read:!1},readOnly:!0})],p.prototype,"type",void 0),p=i([y.subclass("esri.layers.PointCloudLayer")],p)}(y.declared(u,c))});