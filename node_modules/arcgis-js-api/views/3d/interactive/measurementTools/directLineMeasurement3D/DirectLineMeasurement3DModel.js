// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.8/esri/copyright.txt for details.

define(["require","exports","../../../../../core/tsSupport/declareExtendsHelper","../../../../../core/tsSupport/decorateHelper","../../../../../core/Accessor","../../../../../core/Collection","../../../../../core/Handles","../../../../../core/watchUtils","../../../../../core/accessorSupport/decorators","../../../../../geometry/SpatialReference","../../../../../geometry/support/geodesicUtils","../support/Quantity","../support/quantityUtils","../support/UnitNormalizer","../support/unitUtils","../../../lib/glMatrix","../../../support/earthUtils","../../../support/mathUtils","../../../support/projectionUtils","../../../webgl-engine/lib/Util"],function(e,t,i,r,n,o,a,s,c,l,d,u,p,h,m,g,f,y,v,b){var P=f.earthRadius*Math.PI/180;return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._tempStartPosition=g.vec3d.create(),t._tempEndPosition=g.vec3d.create(),t._tempCornerPosition=g.vec3d.create(),t._unitNormalizer=new h,t._handles=new a,t.cursorPoint=null,t.hoveredHandle=null,t.draggedHandles=new o,t.state="initial",t.mode="auto",t.unit="metric",t.directDistance=null,t.horizontalDistance=null,t.verticalDistance=null,t.geodesicDistance=null,t.geodesicAngle=null,t.triangleCollapseRatioThreshold=.03,t.geodesicMeasurementDistanceThreshold=1e5,t}return i(t,e),t.prototype.initialize=function(){var e=this;this._handles.add(s.init(this.sceneView,"spatialReference",function(t){e._unitNormalizer.spatialReference=t,e._unitNormalizer.ignoredSpatialReferences=[l.WGS84,l.WebMercator]}),"scene-view"),this.reset()},t.prototype.destroy=function(){this._handles.destroy(),this._handles=null},Object.defineProperty(t.prototype,"startPoint",{set:function(e){this._set("startPoint",e),this._updateMeasurement()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startPointSurfaceLocation",{set:function(e){this._set("startPointSurfaceLocation",e),this._updateMeasurement()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endPoint",{set:function(e){this._set("endPoint",e),this._updateMeasurement()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endPointSurfaceLocation",{set:function(e){this._set("endPointSurfaceLocation",e),this._updateMeasurement()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"measurementSurfaceLocation",{get:function(){var e=this.startPointSurfaceLocation,t=this.endPointSurfaceLocation;return null==e||null==t?"camera-dependent":"above-the-surface"===e&&"below-the-surface"===t||"below-the-surface"===e&&"above-the-surface"===t||"on-the-surface"===e&&"on-the-surface"===t?"camera-dependent":"above-the-surface"===e||"above-the-surface"===t?"above-the-surface":"below-the-surface"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"validMeasurement",{get:function(){return!!this.startPoint&&!!this.endPoint},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isMeasuring",{get:function(){return!!this.startPoint},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"geodesicDistanceExceeded",{get:function(){return this.horizontalDistance&&this.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"measurementMode",{get:function(){var e=this.mode;return"auto"===e&&(e="euclidean","degrees"!==this.unit&&"degrees-minutes-seconds"!==this.unit||(e="geodesic"),this.geodesicDistanceExceeded&&(e="geodesic")),e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"triangleView",{get:function(){var e=this._collapseTriangle(),t=null,i=null,r=null,n="geodesic"===this.measurementMode,o=this.directDistance,a=n?this.geodesicDistance:this.horizontalDistance,s=this.verticalDistance,c=null;switch(this.unit){case"metric":t=o&&p.formatMetricLength(o),i=a&&p.formatMetricLength(a),r=s&&p.formatMetricVerticalLength(s),c=o&&o.toUnit("meters");break;case"imperial":t=o&&p.formatImperialLength(o),i=a&&p.formatImperialLength(a),r=s&&p.formatImperialVerticalLength(s),c=o&&o.toUnit(m.preferredImperialLengthUnit(o.value,o.unit));break;case"degrees":i=this.geodesicAngle&&p.formatDecimal(this.geodesicAngle,"degrees"),c=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;case"degrees-minutes-seconds":i=this.geodesicAngle&&p.formatDMS(this.geodesicAngle),c=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;default:t=o&&p.formatDecimal(o,this.unit),i=a&&p.formatDecimal(a,this.unit),r=s&&p.formatDecimal(s,this.unit),c=o&&o.toUnit(this.unit)}var l=1;return c&&(l=b.nextHighestPowerOfTen(c.value/30),l*="degrees"===c.unit?P:m.convertUnit(1,c.unit,"meters"),l/=this._unitNormalizer.normalizeDistance(1)),{visible:this.validMeasurement&&!this.startPoint.equals(this.endPoint),mode:this.measurementMode,collapsed:e,directLabel:t,horizontalLabel:i,verticalLabel:r,stripeLength:l}},enumerable:!0,configurable:!0}),t.prototype.reset=function(){this.clearMeasurement()},t.prototype.clearMeasurement=function(){this.state="initial",this.startPoint=null,this.endPoint=null,this.cursorPoint=null,this._clearOverride("measurementSurfaceLocation"),this._updateMeasurement()},t.prototype.finishedMeasurement=function(e){if(!this._isOverridden("measurementSurfaceLocation")){var t=this.measurementSurfaceLocation,i="camera-dependent"===t?e.cameraAboveGround?"above-the-surface":"below-the-surface":t;this._override("measurementSurfaceLocation",i)}this.state="measured"},t.prototype._collapseTriangle=function(){return!(this.validMeasurement&&!this.startPoint.equals(this.endPoint))||("geodesic"===this.measurementMode||Math.min(this.verticalDistance.value/this.horizontalDistance.value,this.horizontalDistance.value/this.verticalDistance.value)<this.triangleCollapseRatioThreshold)},t.prototype._exactGeodesicDistanceAndAngle=function(e,t){var i=y.deg2rad(e.longitude),r=y.deg2rad(e.latitude),n=y.deg2rad(t.longitude),o=y.deg2rad(t.latitude),a=Math.abs(n-i),s=Math.acos(Math.sin(r)*Math.sin(o)+Math.cos(r)*Math.cos(o)*Math.cos(a)),c=y.rad2deg(s),l=d.inverseGeodeticSolver(r,i,o,n).geodesicDistance;return{distance:new u(l,"meters"),angle:new u(c,"degrees")}},t.prototype._approximateGeodesicDistanceAndAngle=function(e){return{distance:new u(e,"meters"),angle:new u(e/P,"degrees")}},t.prototype._euclideanDistances=function(e,t){e.z>t.z&&(e=[e,e=t][0]);var i=e.clone();i.z=t.z;var r=this._tempStartPosition,n=this._tempEndPosition,o=this._tempCornerPosition,a=this.sceneView.spatialReference,s=a.isWGS84||a.isWebMercator?v.WGS84ECEFSpatialReference:a;v.pointToVector(e,r,s),v.pointToVector(t,n,s),v.pointToVector(i,o,s);var c=g.vec3d.dist(r,n),l=g.vec3d.dist(o,n),d=Math.abs(t.z-e.z);return c=this._unitNormalizer.normalizeDistance(c),l=this._unitNormalizer.normalizeDistance(l),d=this._unitNormalizer.normalizeElevation(d),{direct:new u(c,"meters"),horizontal:new u(l,"meters"),vertical:new u(d,"meters")}},t.prototype._updateMeasurement=function(){if(!this.startPoint||!this.endPoint)return this._set("directDistance",null),this._set("horizontalDistance",null),this._set("verticalDistance",null),this._set("geodesicDistance",null),void this._set("geodesicAngle",null);var e=this._euclideanDistances(this.startPoint,this.endPoint),t=this.sceneView.spatialReference,i=t.isWGS84||t.isWebMercator?this._exactGeodesicDistanceAndAngle(this.startPoint,this.endPoint):this._approximateGeodesicDistanceAndAngle(e.horizontal.value);this._set("directDistance",e.direct),this._set("horizontalDistance",e.horizontal),this._set("verticalDistance",e.vertical),this._set("geodesicDistance",i.distance),this._set("geodesicAngle",i.angle)},r([c.property({constructOnly:!0})],t.prototype,"sceneView",void 0),r([c.property({value:null})],t.prototype,"startPoint",null),r([c.property({value:null})],t.prototype,"startPointSurfaceLocation",null),r([c.property({value:null})],t.prototype,"endPoint",null),r([c.property({value:null})],t.prototype,"endPointSurfaceLocation",null),r([c.property({dependsOn:["startPointSurfaceLocation","endPointSurfaceLocation"]})],t.prototype,"measurementSurfaceLocation",null),r([c.property()],t.prototype,"cursorPoint",void 0),r([c.property()],t.prototype,"hoveredHandle",void 0),r([c.property({readOnly:!0})],t.prototype,"draggedHandles",void 0),r([c.property()],t.prototype,"state",void 0),r([c.property()],t.prototype,"mode",void 0),r([c.property()],t.prototype,"unit",void 0),r([c.property({readOnly:!0,dependsOn:["startPoint","endPoint"]})],t.prototype,"validMeasurement",null),r([c.property({readOnly:!0,dependsOn:["startPoint"]})],t.prototype,"isMeasuring",null),r([c.property({readOnly:!0})],t.prototype,"directDistance",void 0),r([c.property({readOnly:!0})],t.prototype,"horizontalDistance",void 0),r([c.property({readOnly:!0})],t.prototype,"verticalDistance",void 0),r([c.property({readOnly:!0})],t.prototype,"geodesicDistance",void 0),r([c.property({readOnly:!0})],t.prototype,"geodesicAngle",void 0),r([c.property({readOnly:!0,dependsOn:["horizontalDistance","geodesicMeasurementDistanceThreshold"]})],t.prototype,"geodesicDistanceExceeded",null),r([c.property({readOnly:!0,dependsOn:["horizontalDistance","unit","geodesicDistanceExceeded"]})],t.prototype,"measurementMode",null),r([c.property({readOnly:!0,dependsOn:["unit","measurementMode","startPoint","endPoint","triangleCollapseRatioThreshold"]})],t.prototype,"triangleView",null),r([c.property()],t.prototype,"triangleCollapseRatioThreshold",void 0),r([c.property()],t.prototype,"geodesicMeasurementDistanceThreshold",void 0),t=r([c.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],t)}(c.declared(n))});