// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.8/esri/copyright.txt for details.

define(["require","exports","../../../../../core/tsSupport/extendsHelper","../../../camera/constraintUtils","../../../input/util","../../../lib/glMatrix","../InteractiveController","../momentum/PanPlanarMomentumController","../momentum/RotationMomentumController","../momentum/ZoomPlanarMomentumController","../../utils/navigationUtils","../../../webgl-engine/lib/Camera","../../../../navigation/PanPlanarMomentumEstimator","../../../../navigation/RotationMomentumEstimator","../../../../navigation/ZoomMomentumEstimator"],function(t,e,i,n,a,o,r,s,l,m,c,h,p,u,d){Object.defineProperty(e,"__esModule",{value:!0});var v;!function(t){t[t.Vertical=0]="Vertical",t[t.Horizontal=1]="Horizontal"}(v=e.PanMode||(e.PanMode={}));var C=o.vec3d.createFrom(0,0,1),g={ELEVATION_THRESHOLD:3e4,ANGLE_THRESHOLD:16/180*Math.PI},P=function(t){function e(e,i){var n=t.call(this)||this;return n.view=e,n.pickingHelper=i,n.rotationValueSmooth=new a.ExponentialFalloff(.05),n.scalingValueSmooth=new a.ExponentialFalloff(.05),n.planeHorizontal={normal:o.vec3d.create(),d:0},n.planeVertical={normal:o.vec3d.create(),d:0},n.rotationMomentumEstimator=new u.RotationMomentumEstimator,n.panMomentumEstimator=new p.PanPlanarMomentumEstimator(300,12,.9),n.zoomMomentumEstimator=new d.ZoomMomentumEstimator,n.beginCenter=o.vec3d.create(),n.tmpPoints=[],n.beginCenterScreen=o.vec2d.create(),n.tmpCentroid3d=o.vec3d.create(),n.tmpCentroid2d=o.vec2d.create(),n.tmp2d=o.vec2d.create(),n.constraintOptions={selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new h,interactionDirection:null},n}return i(e,t),e.prototype.begin=function(t){if(this.active){this.beginRadius=t.radius,this.pointerCount=t.pointers.size,this.beginAngle=t.angle,this.rotationValueSmooth.reset(),this.scalingValueSmooth.reset(),c.navPointToScreenPoint(this.beginCamera,t.center,this.beginCenterScreen),this.planeHorizontal.d=0,o.vec3d.set(C,this.planeHorizontal.normal);var e=o.vec3d.create();this.pickingHelper.pickPointInScreen(this.beginCenterScreen,e)||this.pickingHelper.pickFreePointInScreen(this.beginCenterScreen,e);var i=o.vec3d.create();o.vec3d.negate(this.beginCamera.viewForward,i);var n=o.vec3d.create();o.vec3d.set(C,n);var a=o.vec3d.dot(i,n),r=a<0,s=Math.asin(r?-a:a);this.panMode=s>=g.ANGLE_THRESHOLD?v.Horizontal:v.Vertical,c.setPlaneD(e,this.planeHorizontal);o.vec3d.dot(this.planeHorizontal.normal,this.beginCamera.eye)+this.planeHorizontal.d<0&&(o.vec3d.negate(this.planeHorizontal.normal),this.planeHorizontal.d*=-1),this.panMode===v.Vertical?(o.vec3d.scale(n,a),o.vec3d.subtract(i,n,this.planeVertical.normal),o.vec3d.normalize(this.planeVertical.normal),c.setPlaneD(e,this.planeVertical),this.computePlanePoints(t.pointers,this.planeVertical,this.beginCamera,this.tmpPoints),c.centroid(this.tmpPoints,this.beginCenter)):(this.computePlanePoints(t.pointers,this.planeHorizontal,this.beginCamera,this.tmpPoints),c.centroid(this.tmpPoints,this.beginCenter)),this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}},e.prototype.update=function(t){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var e=t.pointers.size,i=e>1,a=this.panMode===v.Horizontal?this.planeHorizontal:this.planeVertical,o=this.beginCenter;if(i){var r=this.beginRadius/t.radius,s=.001875*Math.min(Math.max(t.radius,40),120);this.scalingValueSmooth.gain=s,this.scalingValueSmooth.update(r),c.applyZoomToPoint(this.currentCamera,o,this.scalingValueSmooth.value,this.view.state.constraints.minimumPoiDistance),this.zoomMomentumEstimator.add(this.scalingValueSmooth.value,.001*t.timestamp),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(Math.abs(t.radius-this.beginRadius)),n.applyAll(this.view,this.currentCamera,this.constraintOptions)}if(this.computePlanePoints(t.pointers,a,this.currentCamera,this.tmpPoints),c.centroid(this.tmpPoints,this.tmpCentroid3d),c.navPointToScreenPoint(this.currentCamera,t.center,this.tmpCentroid2d),c.applyPanPlanar(this.currentCamera,o,this.tmpCentroid3d),this.panMomentumEstimator.add(this.tmpCentroid2d,this.tmpCentroid3d,.001*t.timestamp),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(this.beginCenterScreen,this.tmpCentroid2d),n.applyAll(this.view,this.currentCamera,this.constraintOptions),i){var l=this.planeHorizontal.normal,m=o,h=this.rotationValueSmooth.value,p=c.normalizeRotationDelta(t.angle-h),u=h+p,s=.00125*Math.min(Math.max(t.radius,40),120);this.rotationValueSmooth.gain=s,this.rotationValueSmooth.update(u);var d=this.rotationValueSmooth.value-this.beginAngle;this.rotationMomentumEstimator.add(d,.001*t.timestamp),c.applyRotation(this.currentCamera,m,l,d),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(Math.abs(t.radius*d)),n.applyAll(this.view,this.currentCamera,this.constraintOptions)}this.currentCamera.markViewDirty()}},e.prototype.end=function(t){t.pointers.size===this.pointerCount&&this.update(t),this.finishController();var e=this.zoomMomentumEstimator.evaluateMomentum();if(e)return new m.ZoomPlanarMomentumController(this.view,e,this.beginCenter);var i=this.rotationMomentumEstimator.evaluateMomentum();if(i)return new l.RotationMomentumController(this.view,i,this.beginCenter,this.planeHorizontal.normal);var n=this.panMomentumEstimator.evaluateMomentum();return n?new s.PanPlanarMomentumController(this.view,n):null},e.prototype.computePlanePoints=function(t,e,i,n){n.length=t.size;var a=this.tmp2d,r=0;return t.forEach(function(t){c.navPointToScreenPoint(i,t,a),void 0===n[r]&&(n[r]=o.vec3d.create()),c.intersectPlaneFromScreenPoint(e,i,a,n[r]),r+=1}),n},e}(r.InteractiveController);e.PinchAndPanController=P});