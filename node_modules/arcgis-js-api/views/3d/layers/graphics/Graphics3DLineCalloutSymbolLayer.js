// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.8/esri/copyright.txt for details.

define(["require","exports","../../../../core/tsSupport/extendsHelper","../../../../Color","../../../../core/screenUtils","./ElevationAligners","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolCommonCode","./Graphics3DSymbolLayer","./graphicUtils","../../webgl-engine/Stage","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/GeometryData","../../webgl-engine/lib/Util","../../webgl-engine/materials/LineCalloutMaterial"],function(e,t,r,n,a,i,o,l,s,c,u,p,d,f,h){var v,m,g=f.VertexAttrConstants,y=function(e){function t(t,r){var n=e.call(this,t,null,r,!0)||this;return n._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},n}return r(t,e),t.prototype.destroy=function(){e.prototype.destroy.call(this),this.isFulfilled()||this.reject(),this._material&&(this._context.stage.remove(u.ModelContentType.MATERIAL,this._material.id),this._material=null)},t.prototype._prepareResources=function(){var e=this._getStageIdHint();this._createMaterialsAndAddToStage(this._context.stage,e),this.resolve()},t.prototype.perInstanceMaterialParameters=function(e){var t=this.materialParameters;return t.screenOffset=e.screenOffset||[0,0],t.centerOffsetUnits=e.centerOffsetUnits||"world",t},Object.defineProperty(t.prototype,"materialParameters",{get:function(){var e=this.symbolContainer,t=e.callout,r=n.toUnitRGBA(t.color);r[3]*=this._getLayerOpacity();var i=a.pt2px(t.size||0),o=null;if(e.verticalOffset){var l=e.verticalOffset,s=l.screenLength,c=l.minWorldLength,u=l.maxWorldLength;o={screenLength:a.pt2px(s),minWorldLength:c||0,maxWorldLength:null!=u?u:1/0}}var p=t.border&&t.border.color?n.toUnitRGBA(t.border.color):null,d=e.symbolLayers.getItemAt(0),f="object"===d.type,h="label-3d"===e.type,v=!f,m=f?0:void 0,g=h;return{color:r,size:i,verticalOffset:o,screenSizePerspective:this._context.screenSizePerspectiveEnabled?this._context.sharedResources.screenSizePerspectiveSettings:null,screenOffset:[0,0],centerOffsetUnits:"world",borderColor:p,occlusionTest:v,shaderPolygonOffset:m,depthHUDAlignStart:g}},enumerable:!0,configurable:!0}),t.prototype._createMaterialsAndAddToStage=function(e,t){this._material=new h(this.materialParameters,t+"_lineCallout_common"),e.add(u.ModelContentType.MATERIAL,this._material)},t.prototype._defaultElevationInfoNoZ=function(){return _},t.prototype.createGraphics3DGraphic=function(e){var t=e.renderingInfo,r=e.graphic;null!=t.needsOffsetAdjustment&&(this._elevationOptions.needsOffsetAdjustment=t.needsOffsetAdjustment);var n=this.getGraphicElevationContext(r,t.elevationOffset||0),a=t.symbol,i="on-the-ground"===this._elevationContext.mode&&!a.symbolLayers.some(function(e){return"object"===e.type||"text"===e.type});if("label-3d"!==a.type&&i)return null;var o=c.computeCentroid(r.geometry);if(null==o)return null;var l="graphic"+r.uid;return this._createAs3DShape(r,o,n,t,l,r.uid)},t.prototype.layerPropertyChanged=function(e,t,r){switch(e){case"opacity":return this.layerOpacityChanged(t,r);case"elevationInfo":return this.layerElevationInfoChanged(t,r)}return!1},t.prototype.layerOpacityChanged=function(e,t){return this._material.setParameterValues(this.materialParameters),!0},t.prototype.layerElevationInfoChanged=function(e,t){var r=this._elevationContext.mode;this._updateElevationContext();var n=this._elevationContext.mode;if(r!==n&&("on-the-ground"===r||"on-the-ground"===n))return!1;for(var a in e){var i=e[a],o=t(i);o&&this.updateGraphicElevationContext(i.graphic,o)}return!0},t.prototype.getGraphicElevationContext=function(t,r){void 0===r&&(r=0);var n=e.prototype.getGraphicElevationContext.call(this,t);return n.addOffsetRenderUnits(r),n},t.prototype.updateGraphicElevationContext=function(e,t){var r=this.getGraphicElevationContext(e,t.metadata.elevationOffset);t.elevationContext.set(r),t.needsElevationUpdates=l.needsElevationUpdates2D(r.mode)},Object.defineProperty(t.prototype,"numberOfVertices",{get:function(){return 6},enumerable:!0,configurable:!0}),t.prototype.createVertexData=function(e){var t,r=e.translation,n=e.centerOffset;if(!r&&!n)return O;var a=r?{size:3,data:[r[0],r[1],r[2]]}:O[g.POSITION],i=n?{size:4,data:[n[0],n[1],n[2],n[3]]}:O[g.AUXPOS1];return t={},t[g.POSITION]=a,t[g.NORMAL]=O[g.NORMAL],t[g.AUXPOS1]=i,t},t.prototype.getOrCreateMaterial=function(e,t){var r=this.perInstanceMaterialParameters(e),n=h.uniqueMaterialIdentifier(r);if(n===this._material.uniqueMaterialIdentifier)return{material:this._material,isUnique:!1};if(e.materialCollection){var a=e.materialCollection.getMaterial(n);return a||(a=new h(r,t+"_lineCallout_shared"),e.materialCollection.addMaterial(n,a)),{material:a,isUnique:!1}}var a=new h(r,t+"_lineCallout_unique");return{material:a,isUnique:!0}},t.prototype._createAs3DShape=function(e,t,r,n,a,s){var c=new d(this.createVertexData(n),b,d.DefaultOffsets,"point"),u=new p(c,a),f=[u],h=this.getOrCreateMaterial(n,a),v=l.createStageObjectForPoint.call(this,t,f,[[h.material]],null,null,r,a,this._context.layer.uid,s,!0);if(null===v)return null;var m=i.perObjectElevationAligner,g=new o(this,v.object,f,h.isUnique?[h.material]:null,null,m,r);return g.metadata={elevationOffset:n.elevationOffset||0},g.alignedTerrainElevation=v.terrainElevation,g.needsElevationUpdates=l.needsElevationUpdates2D(r.mode),l.extendPointGraphicElevationContext(g,t,this._context.elevationProvider),g},t}(s),O=(v={},v[g.POSITION]={size:3,data:[0,0,0]},v[g.NORMAL]={size:3,data:[0,0,1]},v[g.AUXPOS1]={size:4,data:[0,0,0,1]},v),C=new Uint32Array([0]),b=(m={},m[g.POSITION]=C,m[g.NORMAL]=C,m[g.AUXPOS1]=C,m),_={mode:"relative-to-ground",offset:0};return y});