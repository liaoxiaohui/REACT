// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.8/esri/copyright.txt for details.

define(["require","exports","../../support/geometryUtils","./BufferVectorMath","./GeometryData","./gl-matrix","./Util"],function(t,e,r,a,n,o,s){function c(t,e,r,a,n){return!(Math.abs(o.vec3.dot(e,t))>n)&&(o.vec3.cross(t,e,r),o.vec3.normalize(r),o.vec3.cross(r,t,a),o.vec3.normalize(a),!0)}function v(t,e,r,a,n,o,s){return c(t,e,n,o,s)||c(t,r,n,o,s)||c(t,a,n,o,s)}var A,i=a.Vec3Compact;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(24),r=0;r<8;r++)e[3*r]=a[r][0]*t[0],e[3*r+1]=a[r][1]*t[1],e[3*r+2]=a[r][2]*t[2];var i={};i[s.VertexAttrConstants.POSITION]=new Uint32Array(v),i[s.VertexAttrConstants.NORMAL]=new Uint32Array(A),i[s.VertexAttrConstants.UV0]=new Uint32Array(y);var l={};return l[s.VertexAttrConstants.POSITION]={size:3,data:e},l[s.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(o)},l[s.VertexAttrConstants.UV0]={size:2,data:new Float32Array(c)},new n(l,i)}for(var r=.5,a=[[-r,-r,r],[r,-r,r],[r,r,r],[-r,r,r],[-r,-r,-r],[r,-r,-r],[r,r,-r],[-r,r,-r]],o=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],c=[0,0,1,0,1,1,0,1],v=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],A=new Array(36),i=0;i<6;i++)for(var l=0;l<6;l++)A[6*i+l]=i;for(var y=new Array(36),i=0;i<6;i++)y[6*i+0]=0,y[6*i+1]=1,y[6*i+2]=2,y[6*i+3]=2,y[6*i+4]=3,y[6*i+5]=0;t.createGeometry=e}(A||(A={}));var l;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(18),r=0;r<6;r++)e[3*r]=a[r][0]*t[0],e[3*r+1]=a[r][1]*t[1],e[3*r+2]=a[r][2]*t[2];var A={};A[s.VertexAttrConstants.POSITION]=new Uint32Array(c),A[s.VertexAttrConstants.NORMAL]=new Uint32Array(v);var i={};return i[s.VertexAttrConstants.POSITION]={size:3,data:e},i[s.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(o)},new n(i,A)}var r=.5,a=[[-r,0,-r],[r,0,-r],[r,0,r],[-r,0,r],[0,-r,0],[0,r,0]],o=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],c=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],v=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];t.createGeometry=e}(l||(l={}));var y;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(12),r=0;r<4;r++)e[3*r]=f[r][0]*t[0],e[3*r+1]=f[r][1]*t[1],e[3*r+2]=f[r][2]*t[2];var a={};a[s.VertexAttrConstants.POSITION]=new Uint32Array(V),a[s.VertexAttrConstants.NORMAL]=new Uint32Array(x);var o={};return o[s.VertexAttrConstants.POSITION]={size:3,data:e},o[s.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(O)},new n(o,a)}var r=.5,a=o.vec3.createFrom(-r,0,-r),c=o.vec3.createFrom(r,0,-r),v=o.vec3.createFrom(0,0,r),A=o.vec3.createFrom(0,.5,0),i=o.vec3.create(),l=o.vec3.create(),y=o.vec3.create(),d=o.vec3.create(),h=o.vec3.create();o.vec3.subtract(a,A,i),o.vec3.subtract(a,c,l),o.vec3.cross(i,l,y),o.vec3.normalize(y,y),o.vec3.subtract(c,A,i),o.vec3.subtract(c,v,l),o.vec3.cross(i,l,d),o.vec3.normalize(d,d),o.vec3.subtract(v,A,i),o.vec3.subtract(v,a,l),o.vec3.cross(i,l,h),o.vec3.normalize(h,h);var f=[a,c,v,A],O=[0,-1,0,y[0],y[1],y[2],d[0],d[1],d[2],h[0],h[1],h[2]],V=[0,1,2,3,1,0,3,2,1,3,0,2],x=[0,0,0,1,1,1,2,2,2,3,3,3];t.createGeometry=e}(y||(y={}));var d;!function(t){function e(t,e,r,a,o,c,v){t=t||50,a=void 0!==a?a:-Math.PI,o=void 0!==o?o:2*Math.PI,c=void 0!==c?c:.5*-Math.PI,v=void 0!==v?v:Math.PI;for(var A=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(r)||6),l=(A+1)*(i+1),y=new Float32Array(3*l),d=new Float32Array(3*l),h=new Float32Array(2*l),f=[],O=0,V=0;V<=i;V++){for(var x=[],C=V/i,w=c+C*v,m=Math.cos(w),u=0;u<=A;u++){var g=u/A,I=a+g*o,M=Math.cos(I)*m,F=Math.sin(w),z=-Math.sin(I)*m;y[3*O]=M*t,y[3*O+1]=F*t,y[3*O+2]=z*t,d[3*O]=M,d[3*O+1]=F,d[3*O+2]=z,h[2*O]=g,h[2*O+1]=C,x.push(O),++O}f.push(x)}var N=new Uint32Array(2*A*(i-1)*3);O=0;for(var V=0;V<i;V++)for(var u=0;u<A;u++){var U=f[V][u],P=f[V][u+1],S=f[V+1][u+1],R=f[V+1][u];0===V?(N[O++]=U,N[O++]=S,N[O++]=R):V===i-1?(N[O++]=U,N[O++]=P,N[O++]=S):(N[O++]=U,N[O++]=P,N[O++]=S,N[O++]=S,N[O++]=R,N[O++]=U)}s.assert(O===N.length);var L={};L[s.VertexAttrConstants.POSITION]=N,L[s.VertexAttrConstants.NORMAL]=N,L[s.VertexAttrConstants.UV0]=N;var T={};return T[s.VertexAttrConstants.POSITION]={size:3,data:y},T[s.VertexAttrConstants.NORMAL]={size:3,data:d},T[s.VertexAttrConstants.UV0]={size:2,data:h},new n(T,L)}function c(t,e,r){function a(e,r){var a;e>r&&(a=[r,e],e=a[0],r=a[1]);var n=e.toString()+"."+r.toString();if(y[n])return y[n];var s=o.length;return o.length+=3,i.add(o,3*e,o,3*r,o,s),i.scale(o,s,t/i.length(o,s)),s/=3,y[n]=s,s}var o,c,v=t;if(r)o=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],c=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]);else{var A=v*(1+Math.sqrt(5))/2;o=[-v,A,0,v,A,0,-v,-A,0,v,-A,0,0,-v,A,0,v,A,0,-v,-A,0,v,-A,A,0,-v,A,0,v,-A,0,-v,-A,0,v],c=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1])}for(var l=0;l<o.length;l+=3)i.scale(o,l,t/i.length(o,l));for(var y={},l=0;l<e;l++){for(var d=c.length,h=new Uint32Array(4*d),f=0;f<d;f+=3){var O=c[f],V=c[f+1],x=c[f+2],C=a(O,V),w=a(V,x),m=a(x,O),u=4*f;h[u]=O,h[u+1]=C,h[u+2]=m,h[u+3]=V,h[u+4]=w,h[u+5]=C,h[u+6]=x,h[u+7]=m,h[u+8]=w,h[u+9]=C,h[u+10]=w,h[u+11]=m}c=h,y={}}for(var g=new Float32Array(o),l=0;l<g.length;l+=3)i.normalize(g,l);var I={};I[s.VertexAttrConstants.POSITION]=c,I[s.VertexAttrConstants.NORMAL]=c;var M={};return M[s.VertexAttrConstants.POSITION]={size:3,data:new Float32Array(o)},M[s.VertexAttrConstants.NORMAL]={size:3,data:g},new n(M,I)}function d(t,e,r,a,o,c,v){var A=e?new Float32Array([e[0],e[1],e[2]]):new Float32Array([0,0,0]),i=t?new Float32Array([t[0],t[1],t[2]]):new Float32Array([0,0,1]),l=c?new Float32Array(c):new Float32Array([0,0]),y=r?new Uint8Array([255*r[0],255*r[1],255*r[2],r.length>3?255*r[3]:255]):new Uint8Array([255,255,255,255]),d=null!=a&&2===a.length?new Float32Array(a):new Float32Array([1,1]),h=new Uint32Array([0]),f={};f[s.VertexAttrConstants.POSITION]=h,f[s.VertexAttrConstants.NORMAL]=h,f[s.VertexAttrConstants.UV0]=h,f[s.VertexAttrConstants.COLOR]=h,f[s.VertexAttrConstants.SIZE]=h;var O={};if(O[s.VertexAttrConstants.POSITION]={size:3,data:A},O[s.VertexAttrConstants.NORMAL]={size:3,data:i},O[s.VertexAttrConstants.UV0]={size:l.length,data:l},O[s.VertexAttrConstants.COLOR]={size:4,data:y},O[s.VertexAttrConstants.SIZE]={size:2,data:d},null!=o){var V=new Float32Array([o[0],o[1],o[2],o[3]]);f[s.VertexAttrConstants.AUXPOS1]=h,O[s.VertexAttrConstants.AUXPOS1]={size:4,data:V}}if(null!=v){var x=new Float32Array([v[0],v[1],v[2],v[3]]);f[s.VertexAttrConstants.AUXPOS2]=h,O[s.VertexAttrConstants.AUXPOS2]={size:4,data:x}}return new n(O,f,n.DefaultOffsets,"point")}function V(t,e){for(var r=new Float32Array(3*t.length),a=new Float32Array(e?3*t.length:3),o=new Uint32Array(t.length),c=new Uint32Array(t.length),v=0;v<t.length;v++)r[3*v]=t[v][0],r[3*v+1]=t[v][1],r[3*v+2]=t[v][2],e&&(a[3*v]=e[v][0],a[3*v+1]=e[v][1],a[3*v+2]=e[v][2]),o[v]=v,c[v]=0;e||(a[0]=0,a[1]=1,a[2]=0);var A=new Float32Array(2);A[0]=0,A[1]=0;var i={};i[s.VertexAttrConstants.POSITION]=o,i[s.VertexAttrConstants.NORMAL]=e?o:c,i[s.VertexAttrConstants.UV0]=c;var l={};return l[s.VertexAttrConstants.POSITION]={size:3,data:r},l[s.VertexAttrConstants.NORMAL]={size:3,data:a},l[s.VertexAttrConstants.UV0]={size:2,data:A},new n(l,i,n.DefaultOffsets,"point")}function x(){var t=new Float32Array([0,0,0,0,0,100,100,0,0]),e=new Uint32Array([0,1,2]),r=new Float32Array([0,1,0]),a=new Uint32Array([0,0,0]),o=new Float32Array([0,0]),c=new Uint32Array([0,0,0]),v={};v[s.VertexAttrConstants.POSITION]=e,v[s.VertexAttrConstants.NORMAL]=a,v[s.VertexAttrConstants.UV0]=c;var A={};return A[s.VertexAttrConstants.POSITION]={size:3,data:t},A[s.VertexAttrConstants.NORMAL]={size:3,data:r},A[s.VertexAttrConstants.UV0]={size:2,data:o},new n(A,v)}function C(t){var e=new Float32Array(12);if(t)for(var r=0;r<4;r++)for(var a=0;a<3;a++)e[3*r+a]=t[r][a];else e[0]=-1,e[1]=-1,e[2]=0,e[3]=1,e[4]=-1,e[5]=0,e[6]=1,e[7]=1,e[8]=0,e[9]=-1,e[10]=1,e[11]=0;var o=new Uint32Array([0,1,2,2,3,0]),c=new Float32Array([0,0,1]),v=new Uint32Array([0,0,0,0,0,0]),A=new Float32Array([0,0,1,0,1,1,0,1]),i=new Uint8Array([255,255,255,255]),l={};l[s.VertexAttrConstants.POSITION]=o,l[s.VertexAttrConstants.NORMAL]=v,l[s.VertexAttrConstants.UV0]=o,l[s.VertexAttrConstants.COLOR]=v;var y={};return y[s.VertexAttrConstants.POSITION]={size:3,data:e},y[s.VertexAttrConstants.NORMAL]={size:3,data:c},y[s.VertexAttrConstants.UV0]={size:2,data:A},y[s.VertexAttrConstants.COLOR]={size:4,data:i},new n(y,l)}function w(t,e,r,a){var c=0,v=e,A=t,i=o.vec3.createFrom(0,c,0),l=o.vec3.createFrom(0,c+A,0),y=o.vec3.createFrom(0,-1,0),d=o.vec3.createFrom(0,1,0);a&&(c=A,l=o.vec3.createFrom(0,0,0),i=o.vec3.createFrom(0,c,0),y=o.vec3.createFrom(0,1,0),d=o.vec3.createFrom(0,-1,0));var h=[l,i],f=[y,d],O=r+2,V=Math.sqrt(A*A+v*v);if(a)for(var x=r-1;x>=0;x--){var C=x*(2*Math.PI/r),w=o.vec3.createFrom(Math.cos(C)*v,c,Math.sin(C)*v);h.push(w);var m=o.vec3.createFrom(A*Math.cos(C)/V,-v/V,A*Math.sin(C)/V);f.push(m)}else for(var x=0;x<r;x++){var C=x*(2*Math.PI/r),w=o.vec3.createFrom(Math.cos(C)*v,c,Math.sin(C)*v);h.push(w);var m=o.vec3.createFrom(A*Math.cos(C)/V,v/V,A*Math.sin(C)/V);f.push(m)}for(var u=new Uint32Array(2*(r+2)*3),g=new Uint32Array(2*(r+2)*3),I=0,M=0,x=3;x<h.length;x++)u[I++]=1,u[I++]=x-1,u[I++]=x,g[M++]=0,g[M++]=0,g[M++]=0;u[I++]=h.length-1,u[I++]=2,u[I++]=1,g[M++]=0,g[M++]=0,g[M++]=0;for(var x=3;x<h.length;x++)u[I++]=x,u[I++]=x-1,u[I++]=0,g[M++]=x,g[M++]=x-1,g[M++]=1;u[I++]=0,u[I++]=2,u[I++]=h.length-1,g[M++]=1,g[M++]=2,g[M++]=f.length-1;for(var F=new Float32Array(3*O),x=0;x<O;x++)F[3*x]=h[x][0],F[3*x+1]=h[x][1],F[3*x+2]=h[x][2];for(var z=new Float32Array(3*O),x=0;x<O;x++)z[3*x]=f[x][0],z[3*x+1]=f[x][1],z[3*x+2]=f[x][2];var N={};N[s.VertexAttrConstants.POSITION]=u,N[s.VertexAttrConstants.NORMAL]=g;var U={};return U[s.VertexAttrConstants.POSITION]={size:3,data:F},U[s.VertexAttrConstants.NORMAL]={size:3,data:z},new n(U,N)}function m(t,e,r,a,c,v){var A=a?o.vec3.create(a):o.vec3.createFrom(1,0,0),i=c?o.vec3.create(c):o.vec3.createFrom(0,0,0),l=void 0===v||v,y=o.vec3.create();o.vec3.normalize(A,y);var d=o.vec3.create();o.vec3.scale(y,Math.abs(t),d);var h=o.vec3.create();o.vec3.scale(d,-.5,h),o.vec3.add(h,i);var f=o.vec3.createFrom(0,1,0);Math.abs(1-o.vec3.dot(y,f))<.2&&o.vec3.set3(0,0,1,f);var O=o.vec3.create();o.vec3.cross(y,f,O),o.vec3.normalize(O),o.vec3.cross(O,y,f);var V=2*r+(l?2:0),x=r+(l?2:0),C=new Float32Array(3*V),w=new Float32Array(3*x),m=new Float32Array(2*V),u=new Uint32Array(3*r*(l?4:2)),g=new Uint32Array(3*r*(l?4:2));l&&(C[3*(V-2)+0]=h[0],C[3*(V-2)+1]=h[1],C[3*(V-2)+2]=h[2],m[2*(V-2)]=0,m[2*(V-2)+1]=0,C[3*(V-1)+0]=C[3*(V-2)+0]+d[0],C[3*(V-1)+1]=C[3*(V-2)+1]+d[1],C[3*(V-1)+2]=C[3*(V-2)+2]+d[2],m[2*(V-1)]=1,m[2*(V-1)+1]=1,w[3*(x-2)+0]=-y[0],w[3*(x-2)+1]=-y[1],w[3*(x-2)+2]=-y[2],w[3*(x-1)+0]=y[0],w[3*(x-1)+1]=y[1],w[3*(x-1)+2]=y[2]);for(var I=function(t,e,r){u[t]=e,g[t]=r},M=0,F=o.vec3.create(),z=o.vec3.create(),N=0;N<r;N++){var U=N*(2*Math.PI/r);o.vec3.scale(f,Math.sin(U),F),o.vec3.scale(O,Math.cos(U),z),o.vec3.add(F,z),w[3*N+0]=F[0],w[3*N+1]=F[1],w[3*N+2]=F[2],o.vec3.scale(F,e),o.vec3.add(F,h),C[3*N+0]=F[0],C[3*N+1]=F[1],C[3*N+2]=F[2],m[2*N+0]=N/r,m[2*N+1]=0,C[3*(N+r)+0]=C[3*N+0]+d[0],C[3*(N+r)+1]=C[3*N+1]+d[1],C[3*(N+r)+2]=C[3*N+2]+d[2],m[2*(N+r)+0]=N/r,m[2*N+1]=1;var P=(N+1)%r;I(M++,N,N),I(M++,N+r,N),I(M++,P,P),I(M++,P,P),I(M++,N+r,N),I(M++,P+r,P)}if(l){for(var N=0;N<r;N++){var P=(N+1)%r;I(M++,V-2,x-2),I(M++,N,x-2),I(M++,P,x-2)}for(var N=0;N<r;N++){var P=(N+1)%r;I(M++,N+r,x-1),I(M++,V-1,x-1),I(M++,P+r,x-1)}}var S={};S[s.VertexAttrConstants.POSITION]=u,S[s.VertexAttrConstants.NORMAL]=g,S[s.VertexAttrConstants.UV0]=u;var R={};return R[s.VertexAttrConstants.POSITION]={size:3,data:C},R[s.VertexAttrConstants.NORMAL]={size:3,data:w},R[s.VertexAttrConstants.UV0]={size:2,data:m},new n(R,S)}function u(e,r,a,n,o){a=a||10,n=null==n||n,s.assert(e.length>1);for(var c=[[0,0,0]],v=[],A=[],i=0;i<a;i++){v.push([0,-i-1,-(i+1)%a-1]);var l=i/a*2*Math.PI;A.push([Math.cos(l)*r,Math.sin(l)*r])}return t.createPathExtrusionGeometry(A,e,c,v,n,o)}function g(t,e,a,c,A,i){var l=t.length,y=new Float32Array(e.length*l*3+(6*a.length||0)),d=new Float32Array(e.length*l+(2*a.length||0)),f=new Float32Array(e.length*l*3+(a?6:0)),O=(e.length-1)*l*6+3*c.length*2,V=new Uint32Array(O),x=new Uint32Array(O),C=0,w=0,m=0,u=0,g=0,I=o.vec3.create(),M=o.vec3.create(),F=o.vec3.create(),z=o.vec3.create(),N=o.vec3.create(),U=o.vec3.create(),P=o.vec3.create(),S=o.vec3.create(),R=o.vec3.create(),L=o.vec3.create(),T=o.vec3.create(),p=o.vec3.create(),G=o.vec3.create(),b=r.plane.create();o.vec3.set3(0,1,0,R),o.vec3.subtract(e[1],e[0],M),o.vec3.normalize(M),A?(o.vec3.add(e[0],i,S),o.vec3.normalize(S,F)):o.vec3.set3(0,0,1,F),v(M,F,R,R,N,F,h),o.vec3.set(F,z),o.vec3.set(N,p);for(var D=0;D<a.length;D++)o.vec3.scale(N,a[D][0],U),o.vec3.scale(F,a[D][2],S),o.vec3.add(U,S),o.vec3.add(U,e[0]),y[C++]=U[0],y[C++]=U[1],y[C++]=U[2],d[m++]=0;f[w++]=-M[0],f[w++]=-M[1],f[w++]=-M[2];for(var D=0;D<c.length;D++)V[u++]=c[D][0]>0?c[D][0]:-c[D][0]-1+a.length,V[u++]=c[D][1]>0?c[D][1]:-c[D][1]-1+a.length,V[u++]=c[D][2]>0?c[D][2]:-c[D][2]-1+a.length,x[g++]=0,x[g++]=0,x[g++]=0;for(var q=a.length,E=a.length-1,X=0;X<e.length;X++){var B=!1;if(X>0){o.vec3.set(M,I),X<e.length-1?(o.vec3.subtract(e[X+1],e[X],M),o.vec3.normalize(M)):B=!0,o.vec3.add(I,M,L),o.vec3.normalize(L),o.vec3.add(e[X-1],z,T),r.plane.fromPositionAndNormal(e[X],L,b);r.plane.intersectRay(b,T,I,S)?(o.vec3.subtract(S,e[X]),o.vec3.normalize(S,F),o.vec3.cross(L,F,N),o.vec3.normalize(N)):v(L,z,p,R,N,F,h),o.vec3.set(F,z),o.vec3.set(N,p)}A&&(o.vec3.add(e[X],i,S),o.vec3.normalize(S,G));for(var Z=0;Z<l;Z++)if(o.vec3.scale(N,t[Z][0],U),o.vec3.scale(F,t[Z][1],S),o.vec3.add(U,S),o.vec3.normalize(U,P),f[w++]=P[0],f[w++]=P[1],f[w++]=P[2],d[m++]=A?o.vec3.dot(U,G):U[2],o.vec3.add(U,e[X]),y[C++]=U[0],y[C++]=U[1],y[C++]=U[2],!B){var j=(Z+1)%l;V[u++]=q+Z,V[u++]=q+l+Z,V[u++]=q+j,V[u++]=q+j,V[u++]=q+l+Z,V[u++]=q+l+j;for(var k=0;k<6;k++)x[g++]=V[u-6+k]-E}q+=l}for(var H=e[e.length-1],D=0;D<a.length;D++)o.vec3.scale(N,a[D][0],U),o.vec3.scale(F,a[D][1],S),o.vec3.add(U,S),o.vec3.add(U,H),y[C++]=U[0],y[C++]=U[1],y[C++]=U[2],d[m++]=0;var J=w/3;f[w++]=M[0],f[w++]=M[1],f[w++]=M[2];for(var K=q-l,D=0;D<c.length;D++)V[u++]=c[D][0]>=0?q+c[D][0]:-c[D][0]-1+K,V[u++]=c[D][2]>=0?q+c[D][2]:-c[D][2]-1+K,V[u++]=c[D][1]>=0?q+c[D][1]:-c[D][1]-1+K,x[g++]=J,x[g++]=J,x[g++]=J;var Q={};Q[s.VertexAttrConstants.POSITION]=V,Q[s.VertexAttrConstants.NORMAL]=x;var W={};return W[s.VertexAttrConstants.POSITION]={size:3,data:y},W.zOffset={size:1,data:d},W[s.VertexAttrConstants.NORMAL]={size:3,data:f},new n(W,Q)}function I(t,e){s.assert(t.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),s.assert(3===t[0].length,"createPolylineGeometry(): malformed vertex"),s.assert(void 0===e||e.length===t.length,"createPolylineGeometry: need same number of points and normals"),s.assert(void 0===e||3===e[0].length,"createPolylineGeometry(): malformed normal");for(var r=new Float32Array(3*t.length),a=new Uint32Array(2*(t.length-1)),o=0,c=0,v=0;v<t.length;v++){for(var A=0;A<3;A++)r[o++]=t[v][A];v>0&&(a[c++]=v-1,a[c++]=v)}var i={},l={};if(i[s.VertexAttrConstants.POSITION]=a,l[s.VertexAttrConstants.POSITION]={size:3,data:r},e){for(var y=new Float32Array(3*e.length),d=0,v=0;v<t.length;v++)for(var A=0;A<3;A++)y[d++]=e[v][A];i[s.VertexAttrConstants.NORMAL]=a,l[s.VertexAttrConstants.NORMAL]={size:3,data:y}}return new n(l,i,n.DefaultOffsets,"line")}function M(t,e){var r=e||[1,1,1,1],a=new Uint8Array(4);a[0]=255*r[0],a[1]=255*r[1],a[2]=255*r[2],a[3]=255*(r.length>3?r[3]:1);var o={},c=t.getVertexAttr();for(var v in c)o[v]=c[v];o[s.VertexAttrConstants.COLOR]={size:4,data:a};var A={};for(var v in t.indices)A[v]=t.indices[v];var i=A[s.VertexAttrConstants.POSITION].length;return A[s.VertexAttrConstants.COLOR]=new Uint32Array(i),t=new n(o,A,t.componentOffsets,t.primitiveType)}function F(t){for(var e=t.getVertexAttr(),r=t.indices,n=a.Vec3Compact.subtract,c=r.position.length/3,v=new Float32Array(3*c),A=e.position.data,i=0,l=r.position,y=new Uint32Array(l.length),d=0;d<l.length;d+=3){n(A,3*l[d],A,3*l[d+2],O,0),n(A,3*l[d],A,3*l[d+1],f,0),o.vec3d.cross(f,O),o.vec3d.normalize(f);var h=i/3;v[i++]=f[0],v[i++]=f[1],v[i++]=f[2],y[d]=h,y[d+1]=h,y[d+2]=h}e[s.VertexAttrConstants.NORMAL]={size:3,data:v,offsetIdx:0,strideIdx:3},r[s.VertexAttrConstants.NORMAL]=y}function z(t,e){void 0===e&&(e=t);var r=t.getVertexAttr(),a=r.position.data,n=r.normal.data,o=e.getVertexAttr(),s=o.position.data,c=o.normal.data;if(n)for(var v=0;v<n.length;v+=3){var A=n[v+1];c[v+1]=-n[v+2],c[v+2]=A}if(a)for(var v=0;v<a.length;v+=3){var A=a[v+1];s[v+1]=-a[v+2],s[v+2]=A}return e}t.createBoxGeometry=A.createGeometry,t.createDiamondGeometry=l.createGeometry,t.createTetrahedronGeometry=y.createGeometry,t.createSphereGeometry=e,t.createPolySphereGeometry=c,t.createPointGeometry=d,t.createPointArrayGeometry=V,t.createTriangleGeometry=x,t.createSquareGeometry=C,t.createConeGeometry=w,t.createCylinderGeometry=m,t.createTubeGeometry=u,t.createPathExtrusionGeometry=g,t.createPolylineGeometry=I,t.addVertexColors=M,t.addNormals=F,t.cgToGIS=z}(d||(d={}));var h=.99619469809,f=o.vec3.create(),O=o.vec3.create();return d});